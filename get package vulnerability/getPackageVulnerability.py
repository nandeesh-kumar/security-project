import nvdlib
import sys

# Optional: Set your API key
#nvdlib.config.key = ''  # Put your NVD API key here if you have one

def query_vulns(package_name, version):
    print(f"Searching NVD for vulnerabilities in '{package_name}' version '{version}'...\n")

    # Search using keyword, usually more effective than CPE for Python packages
    results = nvdlib.searchCVE(keywordSearch=package_name, limit=100)

    matched = []

    for cve in results:
        if cve.configurations:
            for config in cve.configurations:
                if config.nodes:
                    for node in config.nodes:
                        for cpe in node.cpeMatch:
                            cpe_uri = cpe.criteria if hasattr(cpe, 'criteria') else cpe.cpe23Uri
                            if package_name in cpe_uri and version in cpe_uri:
                                #print(cve)
                                matched.append(cve)
                                break

    if not matched:
        print("No matching vulnerabilities found.")
    else:
        print(f"Found {len(matched)} matching vulnerabilities:\n")
        for cve in matched:
            print(f"- {cve.id}")
            print(f"  Published: {cve.published}")
            print(f"  Summary: {cve.descriptions[0].value}")
            if cve.metrics and cve.metrics.cvssMetricV31:
                for m in cve.metrics.cvssMetricV31:
                    print(f"  Severity: {m.cvssData.baseSeverity}")
                    print(f"  Score: {m.cvssData.baseScore}")
            print()

if __name__ == "__main__":
    '''if len(sys.argv) != 3:
        print("Usage: python nvd_query.py <package_name> <version>")
    else:
        query_vulns(sys.argv[1], sys.argv[2])'''
    
    query_vulns("d8s-lists", "0.1.0")
    query_vulns("golang.org/x/net/html", "0.33.0")